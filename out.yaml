---
# Source: ks-universal/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: myservice
  labels:
    helm.sh/chart: ks-universal-0.1.0
    app.kubernetes.io/name: mychart
    app.kubernetes.io/instance: mychart
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: myservice
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/name: myservice
    app.kubernetes.io/instance: mychart
---
# Source: ks-universal/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp
  labels:
    helm.sh/chart: ks-universal-0.1.0
    app.kubernetes.io/name: mychart
    app.kubernetes.io/instance: mychart
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: myapp
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: myapp
      app.kubernetes.io/instance: mychart
  template:
    metadata:
      labels:
        app.kubernetes.io/name: myapp
        app.kubernetes.io/instance: mychart
    spec:
      imagePullSecrets:
        {}
      containers:
        
        
        
        - name: main
          image: nginx:latest
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: http-metrics
              containerPort: 9090
              protocol: TCP
          env:
            - name: STATIC_VALUE
              value: "some-value"
            - name: CONFIG_VALUE
              valueFrom:
                configMapKeyRef:
                  name: mychart-myapp-config
                  key: some-key
            - name: SECRET_VALUE
              valueFrom:
                secretKeyRef:
                  name: mychart-myapp-secret
                  key: some-secret
---
# Source: ks-universal/templates/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: data-import
  labels:
    helm.sh/chart: ks-universal-0.1.0
    app.kubernetes.io/name: mychart
    app.kubernetes.io/instance: mychart
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: data-import
spec:
  template:
    metadata:
      labels:
        helm.sh/chart: ks-universal-0.1.0
        app.kubernetes.io/name: mychart
        app.kubernetes.io/instance: mychart
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: data-import
    spec:
      restartPolicy: Never
      containers:
        
        
        
        - name: main
          image: myapp:latest
          args:
                    - import-data
---
# Source: ks-universal/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: myingress
  labels:
    helm.sh/chart: ks-universal-0.1.0
    app.kubernetes.io/name: mychart
    app.kubernetes.io/instance: mychart
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: myingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
    - host: app.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: myingress
                port:
                  number: 80
---
# Source: ks-universal/templates/hpa.yaml
# hpa.yaml
---
# Source: ks-universal/templates/pdb.yaml
# pdb.yaml
---
# Source: ks-universal/templates/serviceaccount.yaml
# serviceaccount.yaml
---
# Source: ks-universal/templates/configs.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mychart-myapp-config
  labels:
    helm.sh/chart: ks-universal-0.1.0
    app.kubernetes.io/name: mychart
    app.kubernetes.io/instance: mychart
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-10"
data:
  config.yaml: "key1: value1\nkey2: value2\n"
