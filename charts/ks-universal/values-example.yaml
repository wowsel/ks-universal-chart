# Global configurations for all deployments
deploymentsGeneral:
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
  nodeSelector:
    kubernetes.io/os: linux
  probes:
    livenessProbe:
      httpGet:
        path: /health
        port: http
      initialDelaySeconds: 30
      periodSeconds: 10
    readinessProbe:
      httpGet:
        path: /ready
        port: http
      initialDelaySeconds: 5
      periodSeconds: 10

# Generic configurations
generic:
  ingressesGeneral:
    annotations:
      nginx.ingress.kubernetes.io/enable-cors: "true"
    domain: example.com
  extraImagePullSecrets:
    - name: registry-secret

# Configurations and Secrets
configs:
  app-config:
    type: configMap
    data:
      config.yaml: |
        environment: production
        log_level: info
        features:
          feature1: true
          feature2: false
  app-secrets:
    type: secret
    data:
      API_KEY: "your-api-key"
      DB_PASSWORD: "your-db-password"

secretRefs:
  shared-secrets:
    - name: S3_SECRET
      secretKeyRef:
        name: passwords
        key: s3-secret-key
    - name: OPENSEARCH_PASSWORD
      secretKeyRef:
        name: passwords
        key: opensearch-password
  db-secrets:
    - name: DB_PASSWORD
      secretKeyRef:
        name: database-creds
        key: password
    - name: DB_USER
      secretKeyRef:
        name: database-creds
        key: username

# Main application deployment
deployments:
  backend-api:
    replicas: 3
    autoCreateService: true
    autoCreateIngress: true
    autoCreateCertificate: true
    autoCreateServiceMonitor: true
    autoCreatePdb: true
    pdbConfig:
      minAvailable: 2
    certificate:
      clusterIssuer: letsencrypt-prod
    containers:
      main:
        image: backend-api
        imageTag: v1.0.0
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        ports:
          http:
            containerPort: 8080
            protocol: TCP
          http-metrics:
            containerPort: 9090
        env:
          - name: CONFIG_PATH
            value: /config/config.yaml
          - name: API_KEY
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: API_KEY
        envFrom:
          - type: configMap
            configName: app-config
        secretRefs:
          - shared-secrets
          - db-secrets
        volumeMounts:
          - name: config-volume
            mountPath: /config
            readOnly: true
    volumes:
      - name: config-volume
        configMap:
          name: app-config
    ingress:
      hosts:
        - subdomain: api
          paths:
            - path: /
              pathType: Prefix
    hpa:
      minReplicas: 3
      maxReplicas: 10
      metrics:
        - type: Resource
          resource:
            name: cpu
            target:
              type: Utilization
              averageUtilization: 80
    serviceMonitor:
      endpoints:
        - port: http-metrics
          interval: 15s
  
  frontend:
    replicas: 2
    autoCreateService: true
    autoCreateIngress: true
    autoCreateCertificate: true
    containers:
      main:
        image: frontend
        imageTag: v1.0.0
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        ports:
          http:
            containerPort: 80
    ingress:
      hosts:
        - host: app.example.com
          paths:
            - path: /
              pathType: Prefix

# Scheduled jobs
cronJobs:
  backup:
    schedule: "0 0 * * *"
    containers:
      main:
        image: backup-job
        imageTag: v1.0.0
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
        env:
          - name: BACKUP_PATH
            value: /backup

# One-time jobs
jobs:
  db-migration:
    containers:
      main:
        image: migration-job
        imageTag: v1.0.0
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
        env:
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: DB_PASSWORD

# Standalone services
services:
  external-service:
    type: ClusterIP
    ports:
      - name: http
        port: 80
        targetPort: 8080

# Persistent Volume Claims
persistentVolumeClaims:
  data-storage:
    accessModes:
      - ReadWriteOnce
    storageClassName: standard
    size: 10Gi

# Standalone ingresses
ingresses:
  external:
    hosts:
      - host: external.example.com
        paths:
          - path: /
            pathType: Prefix
            port: 80
