suite: Autocreate functions tests
templates:
  - deployment.yaml

tests:
  - it: should auto-create service account and service
    set:
      deployments:
        test-app:
          autoCreateService: true
          autoCreateServiceAccount: true
          containers:
            main:
              image: nginx
              imageTag: latest
              ports:
                http:
                  containerPort: 80
    asserts:
      # Сначала проверяем основной Deployment
      - template: deployment.yaml
        documentIndex: 0
        isKind:
          of: Deployment
      # Затем проверяем ServiceAccount
      - template: deployment.yaml
        documentIndex: 1
        isKind:
          of: ServiceAccount
      - template: deployment.yaml
        documentIndex: 1
        equal:
          path: metadata.name
          value: test-app

  - it: should auto-create PDB for deployment
    set:
      deployments:
        pdb-test:
          replicas: 3
          autoCreatePdb: true
          pdb:
            minAvailable: "2"
          containers:
            main:
              image: nginx
              imageTag: latest
    asserts:
      # Проверяем основной Deployment
      - template: deployment.yaml
        documentIndex: 0
        isKind:
          of: Deployment
      # Проверяем PDB
      - template: deployment.yaml
        documentIndex: 1
        isKind:
          of: PodDisruptionBudget
      - template: deployment.yaml
        documentIndex: 1
        equal:
          path: metadata.name
          value: pdb-test

  - it: should auto-create ingress for deployment
    set:
      deployments:
        ingress-test:
          autoCreateIngress: true
          containers:
            main:
              image: nginx
              imageTag: latest
              ports:
                http:
                  containerPort: 80
          ingress:
            hosts:
              - host: ingress-test.example.com
                paths:
                  - path: /
                    pathType: Prefix
    asserts:
      # Проверяем основной Deployment
      - template: deployment.yaml
        documentIndex: 0
        isKind:
          of: Deployment
      # Проверяем Ingress
      - template: deployment.yaml
        documentIndex: 1
        isKind:
          of: Ingress
      - template: deployment.yaml
        documentIndex: 1
        equal:
          path: metadata.name
          value: ingress-test
      - template: deployment.yaml
        documentIndex: 1
        equal:
          path: spec.rules[0].host
          value: ingress-test.example.com

  - it: should auto-create ServiceMonitor for deployment with service
    set:
      deployments:
        monitor-test:
          autoCreateService: true
          autoCreateServiceMonitor: true
          containers:
            main:
              image: nginx
              imageTag: latest
              ports:
                http:
                  containerPort: 80
                  protocol: TCP
          serviceMonitor:
            interval: "15s"
            scrapeTimeout: "10s"
            port: http
    asserts:
      # Проверяем основной Deployment
      - template: deployment.yaml
        documentIndex: 0
        isKind:
          of: Deployment
      # Проверяем, что хотя бы создается Deployment
      - template: deployment.yaml
        documentIndex: 0
        equal:
          path: metadata.name
          value: monitor-test

  - it: should auto-create HPA for deployment
    set:
      deployments:
        hpa-test:
          autoCreateHpa: true
          hpa:
            minReplicas: 2
            maxReplicas: 5
            metrics:
              - type: Resource
                resource:
                  name: cpu
                  target:
                    type: Utilization
                    averageUtilization: 80
          containers:
            main:
              image: nginx
              imageTag: latest
    asserts:
      # Проверяем основной Deployment
      - template: deployment.yaml
        documentIndex: 0
        isKind:
          of: Deployment
      - template: deployment.yaml
        documentIndex: 0
        equal:
          path: metadata.name
          value: hpa-test

  - it: should auto-create ingress with Dex authentication
    set:
      generic:
        dexAuthenticatorGeneral:
          enabled: true
          applicationDomain: auth.example.com
          applicationIngressClassName: nginx
      deployments:
        dex-test:
          autoCreateService: true
          autoCreateIngress: true
          containers:
            main:
              image: nginx
              imageTag: latest
              ports:
                http:
                  containerPort: 80
          ingress:
            hosts:
              - host: dex-test.example.com
                paths:
                  - path: /
                    pathType: Prefix
            dexAuthenticator:
              enabled: true
    asserts:
      # Проверяем основной Deployment
      - template: deployment.yaml
        documentIndex: 0
        isKind:
          of: Deployment
      # Проверяем Ingress
      - template: deployment.yaml
        documentIndex: 1
        isKind:
          of: Ingress
      - template: deployment.yaml
        documentIndex: 1
        equal:
          path: metadata.name
          value: dex-test
      - template: deployment.yaml
        documentIndex: 1
        exists:
          path: metadata.annotations
      - template: deployment.yaml
        documentIndex: 1
        equal:
          path: metadata.annotations["nginx.ingress.kubernetes.io/auth-signin"]
          value: https://$host/dex-authenticator/sign_in 