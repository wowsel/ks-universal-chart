should create auto-created resources without certificate:
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app.kubernetes.io/component: test-app
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: test-app
        helm.sh/chart: ks-universal-test-version
      name: test-app
    spec:
      replicas: 2
      selector:
        matchLabels:
          app.kubernetes.io/component: test-app
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: test-app
      template:
        metadata:
          labels:
            app.kubernetes.io/component: test-app
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: test-app
            helm.sh/chart: ks-universal-test-version
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchLabels:
                        app.kubernetes.io/component: test-app
                    topologyKey: kubernetes.io/hostname
                  weight: 100
          containers:
            - image: nginx:latest
              name: main
              ports:
                - containerPort: 80
                  name: http
                  protocol: TCP
                - containerPort: 8080
                  name: http-metrics
                  protocol: TCP
          serviceAccountName: test-app
  2: |
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      annotations:
        example.com/role: webserver
      labels:
        app.kubernetes.io/component: test-app
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: test-app
        helm.sh/chart: ks-universal-test-version
      name: test-app
  3: |
    apiVersion: policy/v1
    kind: PodDisruptionBudget
    metadata:
      labels:
        app.kubernetes.io/component: test-app
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: test-app
        helm.sh/chart: ks-universal-test-version
      name: test-app
    spec:
      maxUnavailable: 1
      selector:
        matchLabels:
          app.kubernetes.io/component: test-app
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: test-app
  4: |
    apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/component: test-app
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: test-app
        helm.sh/chart: ks-universal-test-version
      name: test-app
    spec:
      ingressClassName: nginx
      rules:
        - host: test.example.org
          http:
            paths:
              - backend:
                  service:
                    name: test-app
                    port:
                      name: http
                path: /
                pathType: Prefix
  5: |
    apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      labels:
        app.kubernetes.io/component: test-app
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: test-app
        helm.sh/chart: ks-universal-test-version
      name: test-app
    spec:
      endpoints:
        - interval: 15s
          path: /metrics
          port: http-metrics
      selector:
        matchLabels:
          app.kubernetes.io/component: test-app
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: test-app
