name: Helm Chart CI

on:
  push:
    branches: [ main ]
    paths:
      - 'charts/**'
      - '.github/workflows/helm.yaml'
  pull_request:
    branches: [ main ]
    paths:
      - 'charts/**'
      - '.github/workflows/helm.yaml'
  release:
    types: [created]

env:
  CHART_DIR: charts/ks-universal
  CHART_REPOSITORY: https://${{ github.repository_owner }}.github.io/$(echo ${{ github.repository }} | cut -d'/' -f2)

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.16.3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config ct.yaml)
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Run chart-testing (lint)
        run: ct lint --config ct.yaml

      # - name: Create kind cluster
      #   uses: helm/kind-action@v1.10.0
      #   if: steps.list-changed.outputs.changed == 'true'

      # - name: Run chart-testing (install)
      #   run: ct install --config ct.yaml

      - name: Set up Helm unittest plugin
        run: |
          helm plugin install https://github.com/helm-unittest/helm-unittest.git

      - name: Run Helm unit tests
        run: |
          helm unittest $CHART_DIR

  publish:
    needs: lint-test
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    permissions:
      pages: write
      id-token: write
      contents: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.16.3

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Charts Museum
        run: |
          wget https://get.helm.sh/chartmuseum-v0.16.2-linux-amd64.tar.gz
          tar xzvf chartmuseum-v0.16.2-linux-amd64.tar.gz
          chmod +x linux-amd64/chartmuseum
          sudo mv linux-amd64/chartmuseum /usr/local/bin/chartmuseum

      - name: Package and Index Charts
        run: |
          # Create temporary directory for charts and pages
          mkdir -p .cr-release-packages
          mkdir -p pages
          
          # Extract version from release tag
          VERSION=${GITHUB_REF#refs/tags/v}
          
          # Update version in Chart.yaml
          sed -i "s/version:.*/version: $VERSION/" $CHART_DIR/Chart.yaml
          
          # Package chart
          helm package $CHART_DIR --destination .cr-release-packages
          
          # Move packaged charts to pages directory
          mv .cr-release-packages/* pages/
          
          # Generate or update index.yaml
          if curl -sSf -o existing-index.yaml ${{ env.CHART_REPOSITORY }}/index.yaml; then
            helm repo index pages --url ${{ env.CHART_REPOSITORY }} --merge existing-index.yaml
          else
            helm repo index pages --url ${{ env.CHART_REPOSITORY }}
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: pages

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4