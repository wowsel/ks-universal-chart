# .github/workflows/helm.yaml
name: Helm Chart CI

on:
  push:
    branches: [ main ]
    paths:
      - 'charts/**'
      - '.github/workflows/helm.yaml'
  pull_request:
    branches: [ main ]
    paths:
      - 'charts/**'
      - '.github/workflows/helm.yaml'
  release:
    types: [created]

env:
  CHART_DIR: charts/ks-universal

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.16.3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config ct.yaml)
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi

      - name: Run chart-testing (lint)
        run: ct lint --config ct.yaml

      - name: Create kind cluster
        uses: helm/kind-action@v1.10.0
        if: steps.list-changed.outputs.changed == 'true'

      - name: Run chart-testing (install)
        run: ct install --config ct.yaml

      # Дополнительные тесты с использованием unittest plugin
      - name: Set up Helm unittest plugin
        run: |
          helm plugin install https://github.com/helm-unittest/helm-unittest.git

      - name: Run Helm unit tests
        run: |
          helm unittest $CHART_DIR

  publish:
    needs: lint-test
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.16.3

      - name: Login to GitHub Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ghcr.io -u $ --password-stdin

      - name: Package and Push Chart
        run: |
          # Извлекаем версию из тега релиза
          VERSION=${GITHUB_REF#refs/tags/v}
          
          # Обновляем версию в Chart.yaml
          sed -i "s/version:.*/version: $VERSION/" $CHART_DIR/Chart.yaml
          
          # Пакетируем чарт
          helm package $CHART_DIR
          
          # Публикуем в GitHub Packages
          helm push ks-universal-${VERSION}.tgz oci://ghcr.io/${{ github.repository_owner }}/charts